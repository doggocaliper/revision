# Queue
# In a post office, people have to take a queue number before they can get their business done
# Using queue, the employees can take note of the queue for the day
# What employees in a post office see on their computer screens:

class Queue:

    def __init__(self):
        self.people = []

    def isEmpty(self):
        return len(self.people) == 0

    def enqueue(self, person):
        self.people.append(person)

    def dequeue(self):
        if not self.isEmpty():
            return self.people.pop(0)
        else:
            raise IndexError("You cannot dequeue from an empty queue")

    def peek(self):
        if not self.isEmpty():
            return self.people[0]
        else:
            raise IndexError("You cannot peek from an empty queue")

    def size(self):
        return len(self.people)

my_queue = Queue()

my_queue.enqueue("John")
my_queue.enqueue("Mary")
my_queue.enqueue("Tom")

print("Queue: ", my_queue.people)

dequeued_person = my_queue.dequeue()
print("Dequeued: ", dequeued_person)

front_person = my_queue.peek()
print("The person currently being served, is: ", front_person)

print("Queue size: ", my_queue.size())
